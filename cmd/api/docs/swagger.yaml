definitions:
  domain.Admin:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      previlege:
        type: string
    type: object
  domain.Work:
    properties:
      district_id:
        type: integer
      id:
        type: integer
      pro_id:
        type: integer
      state_id:
        type: integer
      street:
        type: string
      target_profession:
        type: integer
      user_id:
        type: integer
      work_status:
        type: string
    type: object
  models.AddNewDistrict:
    properties:
      district:
        type: string
      state_id:
        type: integer
    type: object
  models.AddNewState:
    properties:
      state:
        type: string
    type: object
  models.AddServicesToACategory:
    properties:
      category_id:
        type: integer
      service:
        type: string
    type: object
  models.AdminLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.CreateCategory:
    properties:
      category:
        type: string
    type: object
  models.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.PlaceBid:
    properties:
      description:
        type: string
      estimate:
        type: number
    type: object
  models.RatingModel:
    properties:
      feedback:
        type: string
      rating:
        type: integer
    type: object
  models.UserSignup:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
    type: object
info:
  contact: {}
paths:
  /admin/category:
    delete:
      consumes:
      - application/json
      description: A call to this path along with the category id as parameter will
        result in the deletion of that category
      parameters:
      - description: category-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete Category
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: A call to this path will list all the catrgories that has been
        already added by admins before
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List Categories
      tags:
      - Admin
    patch:
      consumes:
      - application/json
      description: A call to this path along with the category id as parameter will
        result in the re activation  of that category
      parameters:
      - description: category-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Reactivate Category
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: This handler creates a new category of works and severals services
        will be there under each categories
      parameters:
      - description: Create Category
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create Category
      tags:
      - Admin
  /admin/login:
    post:
      consumes:
      - application/json
      description: This is the Login handler for procast admins
      parameters:
      - description: Admin login details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin Login
      tags:
      - Admin
  /admin/panel:
    delete:
      consumes:
      - application/json
      description: using this handler super admins can delete other admins
      parameters:
      - description: admin-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete Admin
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Using this end point the super admin can create new admins
      parameters:
      - description: Admin Details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/domain.Admin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create New Admin
      tags:
      - Admin
  /admin/provider:
    delete:
      consumes:
      - application/json
      description: A call to this path along with the provider  id as parameter will
        result in the revoking verification of the provider
      parameters:
      - description: provider-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Revoke Verification From Provider
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: A call to this path  will result in the listing of all providers
        that have registered in procast
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Providers
      tags:
      - Admin
    patch:
      consumes:
      - application/json
      description: A call to this path along with the provider  id as parameter will
        result in the verification of the provider
      parameters:
      - description: provider-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Verify Provider
      tags:
      - Admin
  /admin/region/district:
    delete:
      consumes:
      - application/json
      description: A call to this path along with the district id as parameter will
        result in the deletion of that district
      parameters:
      - description: district-id
        in: query
        name: district_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete district
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: A call to this path along with the state id as parameter will result
        in the listing of all active districts under that state
      parameters:
      - description: state-id
        in: query
        name: state_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Districts
      tags:
      - Admin
    patch:
      consumes:
      - application/json
      description: A call to this path along with the district id as parameter will
        result in the re activation  of that district
      parameters:
      - description: district-id
        in: query
        name: district_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Reactivate district
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Districts are the smallest unit in which procast works,This handler
        creates a new district under a state which is already exists
      parameters:
      - description: Add District
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AddNewDistrict'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add New District
      tags:
      - Admin
  /admin/region/state:
    delete:
      consumes:
      - application/json
      description: A call to this path along with the district id as parameter will
        result in the deletion of that state
      parameters:
      - description: state-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete State
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: A call to this path will list all the states that has been already
        added by admins before or in other words this handler will displays the span
        of the company in states
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List States
      tags:
      - Admin
    patch:
      consumes:
      - application/json
      description: A call to this path along with the distroct id as parameter will
        result in the re activation  of that state
      parameters:
      - description: state-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Reactivate State
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: This handler creates a new state which means that the company is
        now expanded its size to a new state
      parameters:
      - description: Create state
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AddNewState'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add New State
      tags:
      - Admin
  /admin/services:
    delete:
      consumes:
      - application/json
      description: A call to this path along with the service id as parameter will
        result in the deletion of that service
      parameters:
      - description: service-id
        in: query
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete Services
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: A call to this path along with the category id as parameter will
        result in the listing of all active services under that category
      parameters:
      - description: category-id
        in: query
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Services
      tags:
      - Admin
    patch:
      consumes:
      - application/json
      description: A call to this path along with the service id as parameter will
        result in the re activation  of that service
      parameters:
      - description: service-id
        in: query
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Reactivate service
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: This handler will create a new service under an existing category
      parameters:
      - description: Add service
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AddServicesToACategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add New Service
      tags:
      - Admin
  /admin/user:
    delete:
      consumes:
      - application/json
      description: A call to this path along with the user  id as parameter will result
        in the blocking of the user
      parameters:
      - description: user-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Block User
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: A call to this path  will result in the listing of all users of
        application
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Users
      tags:
      - Admin
    patch:
      consumes:
      - application/json
      description: A call to this path along with the user  id as parameter will result
        in the unblocking of user
      parameters:
      - description: provider-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: UnBlock User
      tags:
      - Admin
  /admin/verify:
    get:
      consumes:
      - application/json
      description: A call to this path  will result in the listing of all providers
        request for verification which has not been accepted yet
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get All Pending Verifications
      tags:
      - Admin
  /admin/verify/request:
    get:
      consumes:
      - application/json
      description: A call to this path along with the provider id will result in the
        displaying of the verification request of a provider
      parameters:
      - description: pro-id
        in: query
        name: pro_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Verification Request
      tags:
      - Admin
  /admin/work/committed:
    get:
      consumes:
      - application/json
      description: A call to this path  will result in the listing of all committed
        works that havent been completed
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Committed Works
      tags:
      - Admin
  /admin/work/completed:
    get:
      consumes:
      - application/json
      description: A call to this path  will result in the listing of all completed
        works
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Completed Works
      tags:
      - Admin
  /provider/login:
    post:
      consumes:
      - application/json
      description: Login handler for jerseyhub providers
      parameters:
      - description: Login Details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Provider Login
      tags:
      - Provider
  /provider/profile/location:
    delete:
      consumes:
      - application/json
      description: providers can remove a location from their preferred location services
      parameters:
      - description: user-id
        in: query
        name: user_id
        required: true
        type: string
      - description: district-id
        in: query
        name: district_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Remove Preferred Location
      tags:
      - Provider
    post:
      consumes:
      - application/json
      description: providers can add a location to their preferred location services
      parameters:
      - description: user-id
        in: query
        name: user_id
        required: true
        type: string
      - description: district-id
        in: query
        name: district_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add Preferred Location
      tags:
      - Provider
  /provider/profile/service:
    delete:
      consumes:
      - application/json
      description: providers can remove a service from their providable services
      parameters:
      - description: user-id
        in: query
        name: user_id
        required: true
        type: string
      - description: service-id
        in: query
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete Service
      tags:
      - Provider
    get:
      consumes:
      - application/json
      description: providers can list their selected services
      parameters:
      - description: user-id
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get All Preferred Locations
      tags:
      - Provider
    post:
      consumes:
      - application/json
      description: providers can add a service to their providable services
      parameters:
      - description: user-id
        in: query
        name: user_id
        required: true
        type: string
      - description: service-id
        in: query
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add Service
      tags:
      - Provider
  /provider/register:
    post:
      consumes:
      - application/json
      description: This is the Login handler for providers
      parameters:
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: email
        in: formData
        name: email
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      - description: repassword
        in: formData
        name: repassword
        required: true
        type: string
      - description: phone
        in: formData
        name: phone
        required: true
        type: string
      - description: document
        in: formData
        name: document
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register
      tags:
      - Provider
  /provider/work/leads:
    get:
      consumes:
      - application/json
      description: get details of all possible leads that provider can bid on them
      parameters:
      - description: pro-id
        in: query
        name: pro-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get All Leads For The Provider
      tags:
      - Provider
  /provider/work/leads/:id:
    get:
      consumes:
      - application/json
      description: a call to this endpoint along with the work_id as parametr will
        get details of the lead
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Details of A lead of provider
      tags:
      - Provider
  /provider/work/leads/:id/bid:
    post:
      consumes:
      - application/json
      description: A provider can place bid on an opening
      parameters:
      - description: pro-id
        in: query
        name: pro-id
        required: true
        type: string
      - description: Bid Details
        in: body
        name: bid
        required: true
        schema:
          $ref: '#/definitions/models.PlaceBid'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Place Bid
      tags:
      - Provider
    put:
      consumes:
      - application/json
      description: A provider can replace an existing bid on an opening
      parameters:
      - description: pro-id
        in: query
        name: pro-id
        required: true
        type: string
      - description: Bid Details
        in: body
        name: bid
        required: true
        schema:
          $ref: '#/definitions/models.PlaceBid'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Replace Bid with New Bid
      tags:
      - Provider
  /provider/work/leads/:id/compare:
    get:
      consumes:
      - application/json
      description: A provider can list all the bids placed on the work by various
        providers and then he can adjust his bid accordingly
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Compare All Other Bids On the Work
      tags:
      - Provider
  /provider/works/my-works/completed:
    get:
      consumes:
      - application/json
      description: An endpoint to display all the completed works of a provider
      parameters:
      - description: pro-id
        in: query
        name: pro_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get All Completed Works Of A Provider
      tags:
      - Provider
  /provider/works/my-works/on-going:
    get:
      consumes:
      - application/json
      description: An endpoint to display all the ongoing works of a provider
      parameters:
      - description: pro-id
        in: query
        name: pro_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get All Ongoing Works Of A Provider
      tags:
      - Provider
  /user/login:
    post:
      consumes:
      - application/json
      description: A user can Login using this endpoint
      parameters:
      - description: login details
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Login
      tags:
      - User
  /user/provider/:pro-id:
    get:
      consumes:
      - application/json
      description: get details of providers when user clicks on provider profile
      parameters:
      - description: pro-id
        in: query
        name: pro-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Provider Details For User
      tags:
      - User
  /user/provider/:pro_id/works:
    get:
      consumes:
      - application/json
      description: An endpoint to display all the works of a provider
      parameters:
      - description: pro_id
        in: query
        name: pro_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Works Of A Provider
      tags:
      - User
  /user/signup:
    post:
      consumes:
      - application/json
      description: A user can signup using this endpoint
      parameters:
      - description: signup details
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/models.UserSignup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User SignUP
      tags:
      - User
  /user/works:
    get:
      consumes:
      - application/json
      description: An endpoint to display all the listed works of a user
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get All Listed Works
      tags:
      - User
    post:
      consumes:
      - application/json
      description: A user can list a new opening through this endpoint
      parameters:
      - description: work details
        in: body
        name: work
        required: true
        schema:
          $ref: '#/definitions/domain.Work'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List New Opening
      tags:
      - User
  /user/works/:id:
    get:
      consumes:
      - application/json
      description: An endpoint to display deatails of works of a user
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Work details
      tags:
      - User
  /user/works/:id/assign:
    put:
      consumes:
      - application/json
      description: An endpoint to assign the work to a particular provider
      parameters:
      - description: pro id
        in: query
        name: pro_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Assign Work To A Provider
      tags:
      - User
  /user/works/:id/complete:
    put:
      consumes:
      - application/json
      description: An endpoint to make the work status as completed
      parameters:
      - description: pro id
        in: query
        name: pro_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Make Work As Completed
      tags:
      - User
  /user/works/:id/rate:
    post:
      consumes:
      - application/json
      description: Rate The Work By A Provider
      parameters:
      - description: 'Rating '
        in: body
        name: rating
        required: true
        schema:
          $ref: '#/definitions/models.RatingModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Rate Work
      tags:
      - User
  /user/works/completed:
    get:
      consumes:
      - application/json
      description: An endpoint to display all the completed works of a user
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get All Completed Works
      tags:
      - User
  /user/works/on-going:
    get:
      consumes:
      - application/json
      description: An endpoint to display all the Ongoing works of a user
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get All Ongoing Works
      tags:
      - User
swagger: "2.0"
